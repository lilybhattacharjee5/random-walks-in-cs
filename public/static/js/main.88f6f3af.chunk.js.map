{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/store/index.js","js/middleware/index.js","js/actions/index.js","js/components/DoctorWhoForm.jsx","js/components/DoctorWhoGraph.jsx","js/components/App.jsx","serviceWorker.js","index.js"],"names":["SELECT_DOCTOR","SELECT_EPISODE","REQUEST_INTERACTIONS_DOCTOR","REQUEST_INTERACTIONS_EPISODE","RECEIVE_INTERACTIONS_DOCTOR","RECEIVE_INTERACTIONS_EPISODE","cacheSize","interactions","state","arguments","length","undefined","isFetching","nodes","links","action","type","Object","objectSpread","lastUpdated","receivedAt","season","episode","rootReducer","combineReducers","interactionsBySpecs","minKey","keys","minUpdated","Infinity","key","hasOwnProperty","stateWithoutMin","assign","defineProperty","doctor","concat","isEpisode","isDoctor","toString","selectedDoctor","selectedEpisode","store","createStore","applyMiddleware","thunkMiddleware","fetchInteractions","dispatch","fetchedData","input1Val","input2Val","input3Val","valueOf","requestInteractionsDoctor","fetch","requestInteractionsEpisode","then","response","json","error","console","log","Date","now","receiveInteractionsDoctor","receiveInteractionsEpisode","DoctorWhoForm","_ref","tdStyle","padding","input1","React","createRef","input2","input3","react_default","a","createElement","onSubmit","e","preventDefault","current","selectValue","style","width","DoctorWhoForm_FormDropdown","ref","selectName","start","end","FormDropdown","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","elementList","listIter","i","push","range","parseInt","handleChange","bind","assertThisInitialized","setState","target","value","onChange","name","map","number","Component","connect","ConnectedDWGraph","stateNodes","stateLinks","_ref$nodes","_ref$links","_ref$season","_ref$episode","_ref$doctor","textAlign","DoctorWhoGraph_DWD3","id","createGraph","DWD3","drawChart","margin","height","node","c10","scaleOrdinal","d3","svg","select","attr","g","append","simulation","forceSimulation","force","forceManyBody","forceLink","distance","d","forceCenter","stop","zoom","on","currentEvent","transform","zoomHandler","dragAct","drag","sourceEvent","stopPropagation","px","dx","py","dy","x","y","tick","fixed","alpha","restart","link","selectAll","data","enter","weight","rgb","red","green","blue","label","influence","text","character","circle","zone","source","App","className","components_DoctorWhoForm","components_DoctorWhoGraph","Boolean","window","location","hostname","match","ReactDOM","render","react_redux_es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88f6f3af.chunk.js","sourcesContent":["// src/js/constants/action-types.js\n\nexport const SELECT_DOCTOR = 'SELECT_DOCTOR';\nexport const SELECT_EPISODE = 'SELECT_EPISODE';\nexport const REQUEST_INTERACTIONS_DOCTOR = 'REQUEST_INTERACTIONS_DOCTOR';\nexport const REQUEST_INTERACTIONS_EPISODE = 'REQUEST_INTERACTIONS_EPISODE';\nexport const RECEIVE_INTERACTIONS_DOCTOR = 'RECEIVE_INTERACTIONS_DOCTOR';\nexport const RECEIVE_INTERACTIONS_EPISODE = 'RECEIVE_INTERACTIONS_EPISODE';\n","import { combineReducers } from 'redux';\nimport {\n    SELECT_DOCTOR,\n    SELECT_EPISODE,\n    REQUEST_INTERACTIONS_DOCTOR,\n    REQUEST_INTERACTIONS_EPISODE,\n    RECEIVE_INTERACTIONS_DOCTOR,\n    RECEIVE_INTERACTIONS_EPISODE\n} from '../constants/action-types';\nconst cacheSize = 5;\n\nfunction selectedDoctor(state = \"1\", action) {\n    switch (action.type) {\n        case SELECT_DOCTOR:\n            return action.doctor;\n        default:\n            return state;\n    }\n}\n\nfunction selectedEpisode(state = { season: \"1\", episode: \"1\" }, action) {\n    switch (action.type) {\n        case SELECT_EPISODE:\n            return { season: action.season, episode: action.episode };\n        default:\n            return state;\n    }\n}\n\nfunction interactions(state = { isFetching: false, nodes: [], links: [] }, action) {\n    switch (action.type) {\n        case REQUEST_INTERACTIONS_DOCTOR:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case REQUEST_INTERACTIONS_EPISODE:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case RECEIVE_INTERACTIONS_DOCTOR:\n            return {\n                ...state,\n                isFetching: false,\n                nodes: action.nodes,\n                links: action.links,\n                lastUpdated: action.receivedAt\n            }\n        case RECEIVE_INTERACTIONS_EPISODE:\n            return {\n                ...state,\n                season: action.season,\n                episode: action.episode,\n                isFetching: false,\n                nodes: action.nodes,\n                links: action.links,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state;\n    }\n}\n\nfunction interactionsBySpecs(state = {}, action) {\n    let minKey = undefined;\n    if (Object.keys(state).length >= cacheSize) {\n        let minUpdated = Infinity;\n        for (let key in state) {\n            if (state[key]) {\n                if (state[key].hasOwnProperty(\"lastUpdated\")) {\n                    if (state[key].lastUpdated < minUpdated) {\n                        minUpdated = state[key].lastUpdated;\n                        minKey = key;\n                    }\n                }\n            }\n        }\n    } \n    const stateWithoutMin = Object.assign({}, state);\n    delete stateWithoutMin[minKey];\n    switch (action.type) {\n        case RECEIVE_INTERACTIONS_DOCTOR:\n            return { \n                ...stateWithoutMin,\n                [action.doctor]: interactions(state[action.doctor], action)\n            }\n        case RECEIVE_INTERACTIONS_EPISODE:\n            return {\n                ...stateWithoutMin,\n                [`${action.season}-${action.episode}`]: interactions({ \"season\": state[action.season], \"episode\": state[action.episode] }, action),\n            }\n        case REQUEST_INTERACTIONS_DOCTOR:\n            return { \n                ...state,\n                isEpisode: false,\n                isDoctor: true,\n                [action.doctor]: interactions(state[action.doctor], action)\n            }\n        case REQUEST_INTERACTIONS_EPISODE:\n            return {\n                ...state,\n                isEpisode: true,\n                isDoctor: false,\n                [action.season.toString() + \"-\" + action.episode.toString()]: interactions({ \"season\": state[action.season], \"episode\": state[action.episode] }, action),\n            }\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    interactionsBySpecs,\n    selectedDoctor,\n    selectedEpisode\n});\n\nexport default rootReducer;","import thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n    )\n);\n\nexport default store;","import fetch from 'cross-fetch';\nimport { requestInteractionsDoctor, requestInteractionsEpisode, receiveInteractionsDoctor, receiveInteractionsEpisode } from '../actions/index';\n\nexport function fetchInteractions(doctor, season, episode) {\n    return function(dispatch) {\n        let fetchedData;\n        const input1Val = doctor;\n        const input2Val = season;\n        const input3Val = episode;\n        let isDoctor = (input1Val.valueOf() !== \"None\") && (input2Val.valueOf() === \"None\") && (input3Val.valueOf() === \"None\");\n        let isEpisode = (input1Val.valueOf() === \"None\") && (input2Val.valueOf() !== \"None\") && (input3Val.valueOf() !== \"None\");\n        if (isDoctor) {\n            dispatch(requestInteractionsDoctor(doctor));\n            fetchedData = fetch(`/doctors/doctor_${doctor}.txt`);\n        } else if (isEpisode) {\n            dispatch(requestInteractionsEpisode(season, episode));\n            fetchedData = fetch(`/episodes/ep_${season}-${episode}.txt`);\n        }\n        return(fetchedData)\n        .then(\n            response => response.json(),\n            error => console.log('An error occurred.')\n        ).then(json => isDoctor ? dispatch(receiveInteractionsDoctor(doctor, json)) : dispatch(receiveInteractionsEpisode(season, episode, json))\n        )\n    }\n}","// src/js/actions/index.js\n\nimport { SELECT_DOCTOR, SELECT_EPISODE, REQUEST_INTERACTIONS_DOCTOR, REQUEST_INTERACTIONS_EPISODE, RECEIVE_INTERACTIONS_DOCTOR, RECEIVE_INTERACTIONS_EPISODE } from '../constants/action-types';\n\nexport function selectDoctor(doctor) {\n\treturn {\n\t\ttype: SELECT_DOCTOR,\n\t\tdoctor\n\t};\n}\n\nexport function selectEpisode(season, episode) {\n\treturn {\n\t\ttype: SELECT_EPISODE,\n\t\tseason,\n\t\tepisode\n\t};\n}\n\nexport function requestInteractionsDoctor(doctor) {\n\treturn {\n\t\ttype: REQUEST_INTERACTIONS_DOCTOR,\n\t\tdoctor\n\t};\n}\n\nexport function requestInteractionsEpisode(season, episode) {\n\treturn {\n\t\ttype: REQUEST_INTERACTIONS_EPISODE,\n\t\tseason,\n\t\tepisode\n\t};\n}\n\nexport function receiveInteractionsDoctor(doctor, json) {\n\tif (json === undefined || json.nodes === undefined || json.links === undefined) {\n\t\treturn {\n\t\t\ttype: RECEIVE_INTERACTIONS_DOCTOR,\n\t\t\tdoctor,\n\t\t\tnodes: [],\n\t\t\tlinks: [],\n\t\t\treceivedAt: Date.now()\n\t\t}\n\t}\n\treturn {\n\t\ttype: RECEIVE_INTERACTIONS_DOCTOR,\n\t\tdoctor,\n\t\tnodes: json.nodes,\n\t\tlinks: json.links,\n\t\treceivedAt: Date.now()\n\t};\n}\n\nexport function receiveInteractionsEpisode(season, episode, json) {\n\tif (json === undefined || json.nodes === undefined || json.links === undefined) {\n                return {\n                        type: RECEIVE_INTERACTIONS_EPISODE,\n                        season,\n\t\t\t\t\t\tepisode,\n                        nodes: [],\n                        links: [],\n                        receivedAt: Date.now()\n                }\n\t\t}\n        return {\n                type: RECEIVE_INTERACTIONS_EPISODE,\n                season,\n\t\t\t\tepisode,\n                nodes: json.nodes,\n                links: json.links,\n                receivedAt: Date.now()\n        };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectDoctor, selectEpisode } from '../actions/index';\nimport { fetchInteractions } from '../middleware';\n\nfunction range(start, end, step = 1) {\n\tvar listIter = [\"None\"];\n\tfor (var i = start; i <= end; i++) {\n\t\tlistIter.push(i);\n\t}\n\treturn listIter;\n}\n\nfunction DoctorWhoForm({ dispatch }) {\n\tlet tableStyle = {width: \"100%\"};\t\n\tlet tdStyle = {padding: \"10px 10px 10px 10px\"};\n\tlet input1 = React.createRef();\n\tlet input2 = React.createRef();\n\tlet input3 = React.createRef();\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\tonSubmit = {e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst input1Val = input1.current.state.selectValue;\n\t\t\t\tconst input2Val = input2.current.state.selectValue;\n\t\t\t\tconst input3Val = input3.current.state.selectValue;\n\t\t\t\tlet isDoctor = (input1Val.valueOf() !== \"None\") && (input2Val.valueOf() === \"None\") && (input3Val.valueOf() === \"None\");\n\t\t\t\tlet isEpisode = input1Val.valueOf() === \"None\" && input2Val.valueOf() !== \"None\" && input3Val.valueOf() !== \"None\";\n\t\t\t\tif (isDoctor) {\n\t\t\t\t\tdispatch(selectDoctor(input1Val));\n\t\t\t\t\tdispatch(fetchInteractions(input1Val, input2Val, input3Val));\n\t\t\t\t} else if (isEpisode) {\n\t\t\t\t\tdispatch(selectEpisode(input2Val, input3Val));\n\t\t\t\t\tdispatch(fetchInteractions(input1Val, input2Val, input3Val));\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<table style = {tableStyle}>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style = {tdStyle}>\n\t\t\t\t\t\t\t\t(Doctor:&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t<FormDropdown ref = {input1} selectName = \"doctor\" start = \"1\" end = \"13\" />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style = {tdStyle}>\n\t\t\t\t\t\t\t\t<b>OR</b>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style = {tdStyle}>\n\t\t\t\t\t\t\t\t(Season:&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t<FormDropdown ref = {input2} selectName = \"season\" start = \"1\" end = \"37\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style = {tdStyle}>\n\t\t\t\t\t\t\t\tEpisode:&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t<FormDropdown ref = {input3} selectName = \"episode\" start = \"1\" end = \"18\" />)\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style = {tdStyle}>\n\t\t\t\t\t\t\t\t<button type = \"submit\">Graph</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<br /><br />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nclass FormDropdown extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.elementList = range(parseInt(props.start, 10), parseInt(props.end, 10));\n\t\tthis.state = { selectValue: 'None' };\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ selectValue: e.target.value });\n\t}\n\n\trender() {\n\t\treturn(<select value = {this.state.selectValue} onChange = {this.handleChange} name = {this.props.selectName}>\n                \t{this.elementList.map((number) => (\n                        \t<option value = {number} key = {number}>{number}</option>\n                        ))};\n        </select>);\n\t}\n}\n\nDoctorWhoForm = connect()(DoctorWhoForm);\n\nexport default DoctorWhoForm;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { connect } from 'react-redux';\nimport { forceSimulation, forceManyBody, forceLink, forceCenter } from 'd3-force';\nimport { zoom } from 'd3-zoom';\nimport {event as currentEvent} from 'd3-selection';\nimport { rgb } from 'd3-color';\n\nconst mapStateToProps = state => {\n\tlet stateNodes = [];\n\tlet stateLinks = [];\n\tif (state.interactionsBySpecs !== undefined) {\n\t\tif (state.selectedDoctor.toString() in state.interactionsBySpecs && state.interactionsBySpecs.isDoctor) {\n\t\t\tstateNodes = state.interactionsBySpecs[state.selectedDoctor.toString()].nodes;\n\t\t\tstateLinks = state.interactionsBySpecs[state.selectedDoctor.toString()].links;\n\t\t}\n\t\tif ((state.selectedEpisode.season.toString() + \"-\" + state.selectedEpisode.episode.toString()) in state.interactionsBySpecs && state.interactionsBySpecs.isEpisode) {\n\t\t\tstateNodes = state.interactionsBySpecs[state.selectedEpisode.season.toString() + \"-\" + state.selectedEpisode.episode.toString()].nodes;\n\t\t\tstateLinks = state.interactionsBySpecs[state.selectedEpisode.season.toString() + \"-\" + state.selectedEpisode.episode.toString()].links;\n\t\t}\n\t}\n\n\tif (state.interactionsBySpecs.isDoctor) {\n\t\treturn { nodes: stateNodes, links: stateLinks, doctor: state.selectedDoctor };\n\t} else {\n\t\treturn { nodes: stateNodes, links: stateLinks, season: state.selectedEpisode.season, episode: state.selectedEpisode.episode };\n\t}\n\t\n}\n\nfunction DoctorWhoGraph({ nodes = [], links = [], season = undefined, episode = undefined, doctor = undefined }) {\n\n\tfunction createGraph(nodes, links) {\n\t\treturn <DWD3 nodes={ nodes } links={ links } id=\"graph\" />;\n\t}\n\n\n\tif (nodes.length === 0 || links.length === 0) {\n\t\treturn <div><p>Data is either unavailable at this time or loading.</p></div>;\n\t}\n\treturn(\n\t\t<div style={ {textAlign: \"center\"} }>\n\t\t\t{ doctor ? <div><b>Doctor</b>: { doctor }</div> : null }\n\t\t\t{ season ? <div><b>Season</b>: { season }</div> : null }\n\t\t\t{ episode ? <div><b>Episode</b>: { episode }</div> : null }\n\t\t\t<br />\n\t\t\t{ createGraph(nodes, links) }\n\t\t</div>);\n}\n\nconst ConnectedDWGraph = connect(mapStateToProps) (DoctorWhoGraph);\nexport default ConnectedDWGraph;\n\nclass DWD3 extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.drawChart();\n\t}\n\n\tdrawChart() {\n\t\tlet margin = {\n\t\t\ttop: 20,\n\t\t\tbottom: 50,\n\t\t\tright: 30,\n\t\t\tleft: 50,\n\t\t}\n\t\tlet width = 1500 - margin.left - margin.right;\n\t\tlet height = 700 - margin.top - margin.bottom;\n\t\tconst node = this.node;\n\t\tlet c10 = scaleOrdinal(d3.schemeCategory10);\n\n\t\tlet svg = select(node)\n\t\t\t.attr(\"width\", \"100%\")\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom);\n\n\t\tlet g = svg\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\"+margin.left+\",\"+margin.top+\")\");\n\n\t\tlet simulation = forceSimulation(this.props.nodes)\n\t\t\t.force(\"charge\", forceManyBody())\n\t\t\t.force(\"link\", forceLink(this.props.links).distance(400).id(d => d.id))\n\t\t\t.force(\"center\", forceCenter(width / 2, height / 2));\n\t\tsimulation.stop();\n\n\t\tvar zoomHandler = zoom()\n    \t\t.on(\"zoom\", zoomActions);\n \n\t\tzoomHandler(svg);     \n \n\t\tfunction zoomActions(){\n\t\t\tg.attr(\"transform\", currentEvent.transform)\n\t\t}\n\n\t\tfunction dragstart(d) {\n\t\t\td3.event.sourceEvent.stopPropagation();\n\t\t\tsimulation.stop();\n\t\t}\n\t\t \n\t\tfunction dragged(d, i) {\n\t\t\td.px += currentEvent.dx;\n\t\t\td.py += currentEvent.dy;\n\t\t\td.x += currentEvent.dx;\n\t\t\td.y += currentEvent.dy;\n\t\t\ttick();\n\t\t}\n\t\t \n\t\tfunction dragended(d, i) {\n\t\t\td.fixed = true;\n\t\t\ttick();\n\t\t\tsimulation.alpha(1).restart();\n\t\t}\n\n\t\tlet dragAct = drag()\n\t\t\t.on(\"start\", dragstart)\n\t\t\t.on(\"drag\", dragged)\n\t\t\t.on(\"end\", dragended);\n\n\t\tlet link = g\n\t\t\t.selectAll(\".link\")\n\t\t\t.data(this.props.links)\n\t\t\t.enter()\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"stroke-width\", function(d) { return d.weight / 7; } )\n\t\t\t.attr(\"stroke\", function(d) { return rgb(d.red, d.green, d.blue, 0.5); })\n\t\t\t.attr(\"class\", \"link\");\n\n\t\tg\n\t\t\t.selectAll(\".node\")\n\t\t\t.data(this.props.nodes)\n\t\t\t.enter()\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"node\")\n\n\t\tlet label = g\n\t\t\t.selectAll(\"node\")\n\t\t\t.data(this.props.nodes)\n\t\t\t.enter()\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"dx\", 12)\n\t\t\t.attr(\"dy\", \"0.35em\")\n\t\t\t.attr(\"font-size\", function(d) { return d.influence * 1.5 > 9 ? d.influence / 2 : 9; })\n\t\t\t.text(function(d) { return d.character; });\n\n\t\tlet circle = g\n\t\t\t.selectAll(\"node\")\n\t\t\t.data(this.props.nodes)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", function(d) { return d.influence / 2 > 5 ? d.influence / 2 : 5; })\n\t\t\t.attr(\"fill\", function(d) { return c10(d.zone * 10); })\n\t\t\t.attr(\"fill-opacity\", 0.5)\n\t\t\t.call(dragAct);\n\n\t\tsimulation.on(\"tick\", d => {\n\t\t\ttick(d)\n\t\t});\n\n\t\tfunction tick(d) {\n\t\t\tcircle.attr(\"r\", d => d.influence)\n\t\t\t\t.attr(\"cx\", d => d.x)\n\t\t\t\t.attr(\"cy\", d => d.y);\n\n\t\t\tlabel.attr(\"dx\", d => d.x)\n\t\t\t\t.attr(\"dy\", d => d.y);\n\n\t\t\tlink.attr(\"x1\", function(d) { return d.source.x; })\n\t\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\n\t\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\n\t\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\n\t\t}\n\n\t\tsimulation.alpha(1).restart();\n\t}\n\n\trender(){\n\t\treturn (\n\t\t<svg ref={node => this.node = node}>\n\t\t</svg>);\n\t}\n}","import React from 'react';\nimport DoctorWhoForm from './DoctorWhoForm';\nimport ConnectedDWGraph from './DoctorWhoGraph';\n\nconst App = () => (\n\t<div className = \"container\">\n\t\t<h1>Interactive <i>Doctor Who</i></h1>\n\t\t<p><b>Directions</b>: Please select either a doctor OR a season and episode number to view a representative interaction graph between <i>Doctor Who</i> characters. The gradient from red to blue edge colors represents involvement ranging from negative sentiment dialogue to positive sentiment dialogue respectively.</p>\n\t\t<br />\n\t\t<DoctorWhoForm />\n\t\t<br />\n\t\t<ConnectedDWGraph />\n\t</div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './js/store/index';\nimport { Provider } from 'react-redux';\nimport App from './js/components/App';\n//import { Provider } from \nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store = {store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}